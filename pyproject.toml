[build-system]
requires = ["setuptools", "wheel"]

[tool.ruff]
cache-dir = ".tox/.ruff_cache"
line-length = 140
src = ["src", "tests"]

[tool.ruff.lint]
extend-select = [
    "A",   # flake8-builtins
#    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90", # mccabe
    "D",   # pydocstyle
    "DTZ", # flake8-datetimez
    "E",   # pycodestyle errors
    "EM",  # flake8-errmsg
    "ERA", # eradicate
    "EXE", # flake8-executable
    "F",   # pyflakes
    "FLY", # flynt
    "G",   # flake8-logging-format
    "I",   # isort
    "INT", # flake8-gettext
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PT", # flake8-pytest
    "PYI", # flake8-pyi
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "RUF", # ruff-specific
    "S",   # flake8-bandit
#    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T10", # flake8-debugger
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
#    "TD", # flake8-todos
    "TRY", # tryceratops
    "W",   # pycodestyle warnings
]
ignore = [
    # TODO: gradually remove these (document all the things)
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D200",  # One-line docstring should fit on one line with quotes
    "D205",  # 1 blank line required between summary line and description
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D404",  # First word of the docstring should not be This
    # Not useful:
    "RET503",  # Missing explicit `return` at the end of function able to return non-`None` value
]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["bin", "compile"]

[tool.ruff.lint.isort]
order-by-type = false

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"tests/*" = [
    "S",  # No security checks for tests
]
